{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","negociacao","getConnection","then","connection","dao","adicionar","catch","console","log","erro","Erro","listaTodos","Error","apagaTodos","listaAtual","obterNegociacoes","negociacoes","filter","some","isEquals","negociacaoExistente","Promise","resolve","reject","get","map","Date","objeto","data","quantidade","valor","all","obterNegociacoesSemana","obterNegociacoesSemanaAnterior","obterNegociacoesSemanaRetrasada","periodos","reduce","dados","periodo","concat"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\r\nimport { ConnectionFactory } from './ConnectionFactory';\r\nimport { NegociacaoDao } from '../dao/NegociacaoDao';\r\nimport { Negociacao } from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    cadastrar(negociacao) {\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adicionar(negociacao))\r\n            .then(() => 'Negociacao adicionada com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Erro('Não foi possível adicionar a negociação')\r\n            });\r\n    }\r\n\r\n    listar() {\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações');\r\n            });\r\n    }\r\n\r\n    apagar() {\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível apagar as negociações');\r\n            });\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual.some(negociacaoExistente =>\r\n                        negociacao.isEquals(negociacaoExistente))))\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível importar negociações');\r\n            })\r\n    }\r\n\r\n    obterNegociacoesSemana() {\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(\r\n                        objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                    );\r\n                })\r\n                .catch(erro => {\r\n                    console.log(`Falha ao realizar requisição. Detalhes: ${erro}`);\r\n                    reject('Não foi possivel obter as negociações da semana!')\r\n                });\r\n        });\r\n    }\r\n\r\n    obterNegociacoesSemanaAnterior() {\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(\r\n                        objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                    );\r\n                })\r\n                .catch(erro => {\r\n                    console.log(`Falha ao realizar requisição. Detalhes: ${erro}`);\r\n                    reject('Não foi possivel obter as negociações da semana anterior!')\r\n                });\r\n        });\r\n    }\r\n\r\n    obterNegociacoesSemanaRetrasada() {\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/retrasada')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(\r\n                        objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                    );\r\n                })\r\n                .catch(erro => {\r\n                    console.log(`Falha ao realizar requisição. Detalhes: ${erro}`);\r\n                    reject('Não foi possivel obter as negociações da semana retrasada!')\r\n                });\r\n        });\r\n    }\r\n\r\n    obterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesSemana(),\r\n            this.obterNegociacoesSemanaAnterior(),\r\n            this.obterNegociacoesSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n            return negociacoes;\r\n\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n\r\n    }\r\n}"]}